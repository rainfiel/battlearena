
#### common types
.grenade_data
{
	count 0 : integer
}
.grenades
{
	Flashbang 0 : grenade_data
}
.swat {
	name 0 : string
	hp 1 : integer
	origin 2 : string
	rotation 3 : integer
	grenades 4 : grenades
	breaching_charge 5 : integer
	index 6 : integer
	pistol 7: string
	weapon 8 : string
	shield 9 : string
	armor 10 : string
}

.mate {
	session 0 :integer
	name 1 : string
	ready 2 : boolean
	index 3 : integer
	swats 4 : *swat
	skill 5 : attacktypes
	items 6 : *item
}

.room {
	id 0 : integer
	capacity 1 : integer
	mapid 2 : integer
	fighting 3 : boolean
	winner 4 : integer
	rseed 5 : integer
	start_time 6 : integer
	mates 7 : *mate
}

.item {
	type 0 : string
	data 1 : string
}

.role {
	items 0 : *item
	skill 1 : attacktypes
	coins 2 : integer
}
#### common types end



#### push msg types
.resp_leave {
	id 0 : integer
	winner 1 : integer
}
.resp_reach {
	id 0 : integer
	swat_id 1 : integer
	x 2 : integer
	y 3 : integer
	index 4 : integer
}
.resp_mate_change {
	type 0 : string
	room 1 : room
}
.resp_loading {
	
}
.resp_go {
	start_time 0 : integer
}
.resp_cut_seat {
	ok 0 : boolean
	room 1 : room
}
#### push msg types end



#### common message
join 1 {
	request {
		room 0 : integer
		map 1 : integer
	}
	response {
		session 0 : integer
		host 1 : string
		port 2 : integer
	}
}
cancel_join 2 {
	request {

	}
	response {
		ok 0 : boolean
	}
}
report_formation 3 {
	request {
		swats 0 : *swat
	}
	response {
		ready 0 : boolean
		room 1 : room
	}
}
query_current_room 4 {
	request {
		until_ready 0 : boolean
	}
	response {
		ready 0 : boolean
		room 1 : room
	}
}
leave 5 {
	request {
		abort 0 : boolean
	}
	response {
		resp 0 : resp_leave
	}
}
ready_to_fight 6 {
	request {

	}
	response {
		
	}
}
queue_item 7 {
	request {
		index 0 : integer
	}
	response {
		type 0 : string
		msg 1 : string
	}
}
reach 8 {
	request {
		swat_id 0 : integer
		x 1 : integer
		y 2 : integer
		index 3 : integer
	}
	response {
		resp 0 : resp_reach
	}
}
loading_done 9 {
	request {}
	response {}
}
cut_seat 10 {
	request {
	}
	response {
		resp 0 : resp_cut_seat
	}
}
log 11 {
	request {
		log 0 : string
	}
	response {

	}
}
role_info 12 {
	request {

	}
	response {
		role 0 : role
	}
}
